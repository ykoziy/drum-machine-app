{"version":3,"sources":["containers/Header.js","actions/index.js","constants/actionTypes.js","components/DrumMachine.js","constants/drumData.js","components/Button.js","containers/ButtonPanel.js","components/ControlPanel.js","utils/index.js","containers/Screen.js","containers/BankSliderSwitch.js","containers/VolumeBar.js","components/App.js","serviceWorker.js","index.js","reducers/index.js"],"names":["connect","state","power","dispatch","switchPower","type","className","onClick","DrumMachine","props","left","right","KIT_TITLES","DRUM_KIT_ONE","key","title","url","DRUM_KIT_TWO","Button","handleClick","event","audio","currentTarget","querySelector","playAudio","target","id","handleKeyPress","text","soundName","toLowerCase","document","getElementById","pressDrumPad","padClass","volume","this","currentTime","play","setState","switchButtonState","setTimeout","addEventListener","removeEventListener","drumPadClass","isDisabled","disabled","e","src","Component","volumeVal","bankName","pressPad","padName","drumKit","map","i","idx","ControlPanel","children","decimalToPercent","decimalValue","Math","round","volumeText","style","background","BankSliderSwitch","changeBank","switchBank","floating","float","adjustVolume","value","min","max","onChange","undefined","App","Boolean","window","location","hostname","match","store","createStore","action","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.379f516a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { switchPower } from '../actions'\r\n\r\nconst Header = ({power, switchPower}) => {\r\n    return(\r\n        <div className=\"head\">\r\n            <div className=\"head-text\">\r\n                <h1>Drum Machine</h1>\r\n            </div>\r\n            <div className=\"pwr-btn-container\">\r\n                <button className={`pwr-btn ${power ? \"on\" : null}`}\r\n                    onClick={switchPower}\r\n                >\r\n                    <i className=\"far fa-dot-circle\"/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    power: state.power\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  switchPower: () => dispatch(switchPower())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Header);\r\n\r\n","import { SWITCH_POWER, ADJUST_VOLUME, PRESS_PAD, SWITCH_BANK } from \"../constants/actionTypes\";\r\n\r\nexport const switchPower = () => ({type: SWITCH_POWER});\r\n\r\nexport const adjustVolume = (volume) => ({type: ADJUST_VOLUME, volume});\r\n\r\nexport const pressPad = (padName) => ({type: PRESS_PAD, padName});\r\n\r\nexport const switchBank = (bankName) => ({type: SWITCH_BANK, bankName});","export const SWITCH_POWER = 'SWITCH_POWER';\r\nexport const ADJUST_VOLUME = 'ADJUST_VOLUME';\r\nexport const PRESS_PAD = 'PRESS_PAD';\r\nexport const SWITCH_BANK = 'SWITCH_BANK';","import React from \"react\";\r\n\r\nconst DrumMachine = (props) => {\r\n  return(\r\n    <div className=\"drum-machine\">\r\n        {props.left}\r\n        {props.right}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrumMachine;","\r\nexport const KIT_TITLES = [\"Hip Hop Kit\", \"80s Drums\"];\r\n// Hip Hop Kit\r\nexport const DRUM_KIT_ONE = [\r\n    {\r\n        key: \"Q\",\r\n        title: \"Thud Rumy\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/STYLE%20KITS%20(Hip%20Hop,%20Etc)/Dirty%20Hip%20Hop%20Kit/84[kb]dirty-hh-ThudRumy_KIK.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"W\",\r\n        title: \"Slam SN\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/STYLE%20KITS%20(Hip%20Hop,%20Etc)/Dirty%20Hip%20Hop%20Kit/96[kb]dirty-hh-Slam_SN.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"E\",\r\n        title: \"Stanky BK\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/STYLE%20KITS%20(Hip%20Hop,%20Etc)/Dirty%20Hip%20Hop%20Kit/104[kb]dirty-hh-Stanky_BK.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"A\",\r\n        title: \"Tims SN\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/STYLE%20KITS%20(Hip%20Hop,%20Etc)/Dirty%20Hip%20Hop%20Kit/72[kb]dirty-hh-Tims_SN.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"S\",\r\n        title: \"Kane KIK\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/STYLE%20KITS%20(Hip%20Hop,%20Etc)/Dirty%20Hip%20Hop%20Kit/55[kb]dirty-hh-Kane_KIK.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"D\",\r\n        title: \"Old School SN\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/STYLE%20KITS%20(Hip%20Hop,%20Etc)/Dirty%20Hip%20Hop%20Kit/59[kb]dirty-hh-OlSchool_SN.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"Z\",\r\n        title: \"Trick CL\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/STYLE%20KITS%20(Hip%20Hop,%20Etc)/Dirty%20Hip%20Hop%20Kit/87[kb]dirty-hh-Trick_CL.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"X\",\r\n        title: \"Go Brooklyn SN\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/STYLE%20KITS%20(Hip%20Hop,%20Etc)/Dirty%20Hip%20Hop%20Kit/98[kb]dirty-hh-GoBrooklyn_SN.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"C\",\r\n        title: \"Edgy SN\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/STYLE%20KITS%20(Hip%20Hop,%20Etc)/Dirty%20Hip%20Hop%20Kit/107[kb]dirty-hh-Edgy_SN.wav.mp3\"\r\n    }\r\n];\r\n\r\n// 80s Drums\r\nexport const DRUM_KIT_TWO = [\r\n    {\r\n        key: \"Q\",\r\n        title: \"Beat Drum 1\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/80s%20Drum%20Machine/12[kb]80s-Bdrum1.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"W\",\r\n        title: \"Cowbell\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/80s%20Drum%20Machine/18[kb]80s-COWBELL1.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"E\",\r\n        title: \"Tamb 1\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/80s%20Drum%20Machine/24[kb]80s-TAMB1.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"A\",\r\n        title: \"Tom 1\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/80s%20Drum%20Machine/19[kb]80s-TOM1.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"S\",\r\n        title: \"Tom 2\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/80s%20Drum%20Machine/19[kb]80s-TOM2.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"D\",\r\n        title: \"Tom 3\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/80s%20Drum%20Machine/26[kb]80s-TOM3.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"Z\",\r\n        title: \"Tom 5\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/80s%20Drum%20Machine/19[kb]80s-TOM5.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"X\",\r\n        title: \"HH Close 2\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/80s%20Drum%20Machine/9[kb]80s-HHCLOSE2.wav.mp3\"\r\n    },\r\n    {\r\n        key: \"C\",\r\n        title: \"Crash 1\",\r\n        url: \"https://sampleswap.org/samples-ghost/DRUMS%20(FULL%20KITS)/DRUM%20MACHINES/80s%20Drum%20Machine/87[kb]80s-CRASH1.wav.mp3\"\r\n    }\r\n];","import React, { Component } from \"react\";\r\n\r\nclass Button extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            padClass: \"\"\r\n        };\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        let audio = event.currentTarget.querySelector('audio');\r\n        this.playAudio(audio);\r\n        this.props.onClick(event.target.id);\r\n    }\r\n\r\n    playAudio(audio) {\r\n        audio.volume = this.props.volume;\r\n        audio.currentTime = 0;\r\n        audio.play();\r\n    }\r\n\r\n    switchButtonState() {\r\n        (this.state.padClass === \"\") ? this.setState({padClass: \"active\"}) : this.setState({padClass: \"\"}) ;\r\n    }\r\n\r\n    pressDrumPad() {\r\n        if (this.props.power) {\r\n            this.switchButtonState();\r\n            setTimeout(() => this.switchButtonState(), 100);\r\n        }\r\n    }\r\n\r\n    handleKeyPress = (event) => {\r\n      const {text, power, soundName} = this.props;\r\n      if(text.toLowerCase() === event.key.toLowerCase() && power) {\r\n        let audio = document.getElementById(text);\r\n        this.playAudio(audio);\r\n        this.pressDrumPad();\r\n        this.props.onClick(soundName);\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n       document.addEventListener('keydown', this.handleKeyPress);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      document.removeEventListener('keydown', this.handleKeyPress);\r\n    }\r\n\r\n    render() {\r\n        const {text, soundName, url, power} = this.props;\r\n        let drumPadClass = `drum-pad ${this.state.padClass}`;\r\n        let isDisabled = (power) ? false : true;\r\n        return(\r\n            <button\r\n                disabled={isDisabled}\r\n                className={drumPadClass}\r\n                id={soundName}\r\n                onClick={(e) => this.handleClick(e)}\r\n            >\r\n                <audio className=\"clip\" id={text} src={url}></audio>\r\n                {text}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { pressPad } from '../actions'\r\nimport { KIT_TITLES, DRUM_KIT_ONE, DRUM_KIT_TWO} from '../constants/drumData.js';\r\nimport Button from '../components/Button.js';\r\n\r\nconst ButtonPanel = ({power, volumeVal, bankName, pressPad}) => {\r\n    let drumKit = (bankName === KIT_TITLES[0]) ? DRUM_KIT_ONE: DRUM_KIT_TWO;\r\n    return(\r\n        <div className=\"button-panel\">\r\n            {drumKit.map((i, idx) => (\r\n                <Button\r\n                    key={\"btn-\"+idx} text={i.key} soundName={i.title}\r\n                    url={i.url} volume={volumeVal} power={power}\r\n                    onClick={pressPad}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    power: state.power,\r\n    volumeVal: state.volumeVal,\r\n    bankName: state.bankName\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  pressPad: (padName) => dispatch(pressPad(padName))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ButtonPanel);","import React from \"react\";\r\n\r\nconst ControlPanel = (props) => {\r\n    return(\r\n        <div className=\"control-panel\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ControlPanel;\r\n","export const decimalToPercent = (decimalValue) => {\r\n  return Math.round(decimalValue*100);\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport { decimalToPercent } from \"../utils\"\r\n\r\nconst Screen = ({power, volumeVal, padName, bankName}) => {\r\n    const onColor = {background: '#509bd3'};\r\n    const offColor = {background: '#232323'};\r\n    const volumeText = `Volume: ${decimalToPercent(volumeVal)}%`;\r\n    return(\r\n        <div className=\"screen\" style={power ? onColor : offColor}>\r\n            <div className=\"screen-info\"><p className=\"display\">{power ? padName : ''}</p></div>\r\n            <div className=\"mode-info\"><p>{power ? bankName : ''}</p></div>\r\n            <div className=\"volume-info\"><p>{power ? volumeText : ''}</p></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    power: state.power,\r\n    volumeVal: state.volumeVal,\r\n    padName: state.padName,\r\n    bankName: state.bankName\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Screen);","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { KIT_TITLES } from '../constants/drumData.js';\r\nimport { switchBank } from '../actions';\r\n\r\nclass BankSliderSwitch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            floating: 'left'\r\n        };\r\n    }\r\n    changeBank = () => {\r\n        const {bankName, switchBank} = this.props;\r\n        if(bankName === KIT_TITLES[0]) {\r\n            switchBank(KIT_TITLES[1]);\r\n        } else {\r\n            switchBank(KIT_TITLES[0]);\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        const {power} = this.props;\r\n        if(power) {\r\n            if(this.state.floating === 'left') {\r\n                this.setState({floating: 'right'});\r\n            } else {\r\n                this.setState({floating: 'left'});\r\n            }\r\n        }\r\n        this.changeBank();\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"switch-container\">\r\n                <p>Bank </p>\r\n                <div className=\"switch\" onClick={this.handleClick}>\r\n                    <div className=\"sw-inner\" style={{float: this.state.floating}}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    power: state.power,\r\n    bankName: state.bankName\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  switchBank: (bankName) => dispatch(switchBank(bankName))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(BankSliderSwitch);\r\n\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { adjustVolume } from '../actions'\r\nimport { decimalToPercent } from \"../utils\"\r\n\r\nconst VolumeBar = ({power, volumeVal, adjustVolume}) => {\r\n    return(\r\n        <div className=\"volume\">\r\n            <i className=\"fas fa-volume-down\"/>\r\n            <input type=\"range\" min=\"0\" max=\"100\" className=\"slider\" id=\"volume-range\"\r\n                value={decimalToPercent(volumeVal)}\r\n                onChange={power ? adjustVolume : undefined}\r\n            />\r\n            <i className=\"fas fa-volume-up\"/>\r\n        </div>\r\n        );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    power: state.power,\r\n    volumeVal: state.volumeVal\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  adjustVolume: (event) => dispatch(adjustVolume(event.target.value))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(VolumeBar);","import React, { Component } from \"react\";\r\n\r\nimport Header from \"../containers/Header.js\";\r\nimport DrumMachine from \"./DrumMachine.js\";\r\nimport ButtonPanel from \"../containers/ButtonPanel.js\";\r\nimport ControlPanel from \"./ControlPanel.js\";\r\nimport Screen from \"../containers/Screen.js\";\r\nimport BankSliderSwitch from \"../containers/BankSliderSwitch.js\";\r\nimport VolumeBar from \"../containers/VolumeBar.js\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"drum-container\">\r\n        <Header/>\r\n        <DrumMachine\r\n            left={\r\n                <ButtonPanel/>\r\n            }\r\n            right={\r\n                <ControlPanel>\r\n                    <Screen/>\r\n                    <BankSliderSwitch/>\r\n                    <VolumeBar/>\r\n                </ControlPanel>\r\n            }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\n\r\nimport './assets/css/main.scss';\r\nimport App from './components/App';\r\nimport rootReducer from './reducers';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst initialState = {\r\n  power: true,\r\n  volumeVal: 0.5,\r\n  padName: \"\",\r\n  bankName: \"Hip Hop Kit\"\r\n};\r\n\r\nconst store = createStore(rootReducer, initialState);\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { SWITCH_POWER, ADJUST_VOLUME, PRESS_PAD, SWITCH_BANK } from \"../constants/actionTypes\";\r\n\r\nexport default (state, action) => {\r\n  switch(action.type) {\r\n    case SWITCH_POWER:\r\n      return {...state, power: !state.power, padName: \"\"};\r\n    case ADJUST_VOLUME:\r\n      return {...state, volumeVal: action.volume/100};\r\n    case PRESS_PAD:\r\n      return {...state, padName: action.padName};\r\n    case SWITCH_BANK:\r\n      return {...state, bankName: action.bankName, padName: \"\"};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"sourceRoot":""}